import os
import telebot
import threading
import time
from flask import Flask, request
import pytz
from datetime import datetime, timedelta
import re
import random
import traceback # traceback рдореЙрдбреНрдпреВрд▓ рдЗрдВрдкреЛрд░реНрдЯ рдХрд░реЗрдВ

# Environment variables
BOT_TOKEN = os.environ.get("BOT_TOKEN")

# ====================================================================================================
# рдмреЙрд╕, рдпрд╣ рд╕рдмрд╕реЗ рдорд╣рддреНрд╡рдкреВрд░реНрдг рд▓рд╛рдЗрди рд╣реИ!
# рдЖрдкрдХреЛ рдЕрдкрдиреЗ рдирдП Telegram рдЪреИрдирд▓ (https://t.me/+5bYqRYoNoPQyMDU1) рдХреА рд╕рдВрдЦреНрдпрд╛рддреНрдордХ ID рдпрд╣рд╛рдВ рдбрд╛рд▓рдиреА рд╣реЛрдЧреАред
# рдпрд╣ ID '-100' рд╕реЗ рд╢реБрд░реВ рд╣реЛрддреА рд╣реИ (рдЙрджрд╛рд╣рд░рдг: "-1001234567890")ред
# рдЗрд╕реЗ рдкреНрд░рд╛рдкреНрдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП, рдЕрдкрдиреЗ рдЪреИрдирд▓ рдореЗрдВ @getidsbot рдпрд╛ @userinfobot рдХреЛ рдПрдбрдорд┐рди рдХреЗ рд░реВрдк рдореЗрдВ рдЬреЛрдбрд╝реЗрдВ
# рдФрд░ рдлрд┐рд░ рдЪреИрдирд▓ рдореЗрдВ /get_chat_id рдпрд╛ /info рдХрдорд╛рдВрдб рднреЗрдЬреЗрдВред
PROMO_CHANNEL_ID = "https://t.me/c/2437678122/61" # <--- рдЗрд╕реЗ рдЕрдкрдиреА рд╡рд╛рд╕реНрддрд╡рд┐рдХ рдЪреИрдирд▓ ID рд╕реЗ рдмрджрд▓реЗрдВ!
# ====================================================================================================

# рдкреНрд░рдореЛрд╢рди рдореИрд╕реЗрдЬ рдореЗрдВ рдЙрд▓реНрд▓реЗрдЦрд┐рдд рдЪреИрдирд▓ рдХрд╛ рдпреВрдЬрд░рдиреЗрдо/рд▓рд┐рдВрдХ (рдЬреИрд╕рд╛ рдЖрдк рдЪрд╛рд╣рддреЗ рд╣реИрдВ)
PROMOTION_CHANNEL_USERNAME = "@All_Gift_Code_Earning"
PROMOTION_CHANNEL_LINK = "https://t.me/All_Gift_Code_Earning"

WEBHOOK_URL = os.environ.get("WEBHOOK_URL")
IS_RENDER = os.environ.get("RENDER")

# Initialize bot and Flask app
bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# --- Image and Message Data ---

# Good Morning рдЗрдореЗрдЬ URLs
MORNING_IMAGE_URLS = [
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Morning.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Morning%201.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Morning%202.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Morning%203.jpg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Morning%204.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Morning%205.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Morning%206.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Morning%207.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Morning%208.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Morning%209.jpeg"
]

# Good Night рдЗрдореЗрдЬ URLs
NIGHT_IMAGE_URLS = [
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Night.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Night%201.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Night%202.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Night%203.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Night%204.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Night%205.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Night%206.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Night%207.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Night%208.jpeg",
    "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/Good%20Night%209.jpeg"
]

# Good Morning рдореИрд╕реЗрдЬ
UNIQUE_MORNING_MESSAGES = [
    "*Good Morning!* рдЖрдЬ тВ╣300 рддрдХ рдлрд╛рдпрджреЗрдордВрдж рд░рд╣реЗрдЧрд╛ред",
    "*Good Morning!* рдХрдо рд╕реЗ рдХрдо тВ╣250 рдХрд╛ рдлрд╛рдпрджрд╛ рддрдп рд╣реИ рдЖрдЬред",
    "*Good Morning!* рджрд┐рди рд╢реБрд░реВ рд╣реЛрддреЗ рд╣реА тВ╣400 рдХрд╛ рдлрд╛рдпрджрд╛ рдорд┐рд▓реЗрдЧрд╛ред",
    "*Good Morning!* рдЖрдЬ рдХрд╛ рджрд┐рди тВ╣500 рдХрдорд╛рдиреЗ рд▓рд╛рдпрдХ рд╣реИред",
    "*Good Morning!* рд╕реАрдзрд╛ тВ╣350 рдХрд╛ рдлрд╛рдпрджрд╛ рдорд┐рд▓реЗрдЧрд╛ Bossред",
    "*Good Morning!* тВ╣200 рдЖрдЬ рдкрдХреНрдХрд╛ рдЬреЗрдм рдореЗрдВ рдЖрдПрдЧрд╛ред",
    "*Good Morning!* рдЖрдЬ тВ╣450 рддрдХ рдлрд┐рдХреНрд╕ рдХрдорд╛рдИ рд╣реЛрдиреЗ рд╡рд╛рд▓реА рд╣реИред",
    "*Good Morning!* тВ╣300 рдХреА рдХрдорд╛рдИ рдмрд┐рдирд╛ рд░реБрдХрд╛рд╡рдЯ рд╣реЛрдЧреА рдЖрдЬред",
    "*Good Morning!* рджрд┐рди рдХреА рд╢реБрд░реБрдЖрдд тВ╣250 рдХреЗ рдлрд╛рдпрджреЗ рд╕реЗред",
    "*Good Morning!* тВ╣500 рддрдХ рдХрд╛ рдлрд╛рдпрджрд╛ рдЖрдЬ рддрдп рд╣реИ - рд░реБрдХрдирд╛ рдирд╣реАрдВред"
]

# Good Night рдореИрд╕реЗрдЬ
UNIQUE_NIGHT_MESSAGES = [
    "*Good Night All Members!* рдХрд▓ рдХрд╛ рджрд┐рди тВ╣500 рдХрдорд╛рдирд╛ рдкрдХрд╛ рд╣реИред",
    "*Good Night All Members!* рдХрд▓ тВ╣400 рдХреА рдХрдорд╛рдИ рд╣реЛрдЧреАред",
    "*Good Night All Members!* рдХрд▓ тВ╣350 рдХрд╛ рдлрд╛рдпрджрд╛ рдорд┐рд▓реЗрдЧрд╛ред",
    "*Good Night All Members!* рдХрд▓ рд╕реБрдмрд╣ тВ╣300 рдХреА рдХрдорд╛рдИ рд╢реБрд░реВ рд╣реЛрдЧреАред",
    "*Good Night All Members!* рдХрд▓ тВ╣250 рдХрд╛ рдлрд╛рдпрджрд╛ рдкрдХреНрдХрд╛ рд╣реИред",
    "*Good Night All Members!* рдХрд▓ тВ╣450 рддрдХ рдХрдорд╛рдиреЗ рдХрд╛ рдореМрдХрд╛ рд╣реИред",
    "*Good Night All Members!* рдХрд▓ тВ╣200 рд╕реЗ рд╢реБрд░реВ рд╣реЛрдЧрд╛ рджрд┐рдиред",
    "*Good Night All Members!* рдХрд▓ тВ╣550 рддрдХ рдХрдорд╛рдиреЗ рдХрд╛ рдЪрд╛рдВрд╕ рд╣реИред",
    "*Good Night All Members!* рдХрд▓ тВ╣300 рд╕реЗ тВ╣500 рддрдХ рдХрдорд╛рдИ рд╣реЛрдЧреАред",
    "*Good Night All Members!* рдХрд▓ рд╕реАрдзрд╛ тВ╣400 рдХрд╛ рдлрд╛рдпрджрд╛ рдорд┐рд▓реЗрдЧрд╛уАВ"
]

# рдкреНрд░рдореЛрд╢рдирд▓ рд░рд┐рдкреНрд▓рд╛рдИ рдХреЗ рд▓рд┐рдП рдХреАрд╡рд░реНрдбреНрд╕
KEYWORDS = [
    "subscribe", "chat", "chat hindi", "reply", "join", "joining", "refer", "register", "earning", "https", "invite", "@", "channel",
    "рдореЗрд░реЗ рдЪреИрдирд▓", "рдореЗрд░рд╛ рдЪреИрдирд▓", "рдЪреИрдирд▓ рдХреЛ", "follow", "рдлреЙрд▓реЛ", "рдЬреНрд╡рд╛рдЗрди", "рдЪреИрдирд▓", "рдЬреЙрдЗрди", "link", "promo", "reward",
    "bonus", "gift", "win", "offer", "loot", "free", "telegram",
    "new offer", "today offer", "instant reward", "free gift code", "giveaway",
    "task earning", "refer and earn", "daily bonus", "claim reward",
    "kamai", "рдкреИрд╕реЗ", "paise kaise", "online paise", "ghar baithe kamai",
    "extra earning", "make money online", "earn money",
    "withdrawal proof", "payment proof", "real earning", "trusted earning",
    "instant payment", "upi earning", "paytm cash", "google pay offer",
    "crypto earning", "bitcoin earning", "ethereum earning", "online job",
    "work from home", "part time job", "full time job",
    "referred", "referring", "ref", "referal", "refer code", "joining bonus", "joining link",
    "/join"
]

# /start рдХрдорд╛рдВрдб рдХрд╛ рдореИрд╕реЗрдЬ рдФрд░ рдЗрдореЗрдЬ
START_MESSAGE_TEXT = f"""
*Urgent Update:*
*Naya Gift Code / Offer Live ho chuka hai.*
*Isko paane ke liye hamare channel se juden:*
*[[ {PROMOTION_CHANNEL_USERNAME} ]]*
"""
START_IMAGE_URL = "https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/IMG_20250605_144922.png"

# --- рд╕рд╣рд╛рдпрдХ рдлрдВрдХреНрд╢рдиреНрд╕ (Helper Functions) ---

def get_today_index(list_length):
    """
    рд╡рд░реНрддрдорд╛рди рд╡рд░реНрд╖ рдХреЗ рджрд┐рди рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рдПрдХ рдЗрдВрдбреЗрдХреНрд╕ рдХреА рдЧрдгрдирд╛ рдХрд░рддрд╛ рд╣реИред
    рдпрд╣ рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░рддрд╛ рд╣реИ рдХрд┐ рдкреНрд░рддреНрдпреЗрдХ рджрд┐рди рдПрдХ рдЕрд▓рдЧ рдореИрд╕реЗрдЬ/рдЗрдореЗрдЬ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд┐рдпрд╛ рдЬрд╛рдПред
    """
    # рдореИрд╕реЗрдЬ рдЪрдХреНрд░ рдХреЗ рд╕рд╛рде рд╕рдВрд░реЗрдЦрд┐рдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдЗрдВрдбреЗрдХреНрд╕ рдЧрдгрдирд╛ рдХреЗ рд▓рд┐рдП IST рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ
    india_timezone = pytz.timezone('Asia/Kolkata')
    today = int(datetime.now(india_timezone).strftime("%j")) # рд╡рд░реНрд╖ рдХрд╛ рджрд┐рди (1-366)
    return today % list_length

def send_message_auto(messages, images, prefix_emoji):
    """
    рдкреНрд░рдореЛрд╢рди рдЪреИрдирд▓ рдкрд░ рдПрдХ рдЗрдореЗрдЬ рдФрд░ рд░рд┐рдПрдХреНрд╢рди рдХреЗ рд╕рд╛рде рд╕реНрд╡рдЪрд╛рд▓рд┐рдд рдореИрд╕реЗрдЬ рднреЗрдЬрддрд╛ рд╣реИред
    """
    try:
        # Get message and image based on today's index
        idx = get_today_index(len(messages))
        msg = messages[idx]
        image_url = images[idx % len(images)] # рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВ рдХрд┐ рдЗрдореЗрдЬ рдЗрдВрдбреЗрдХреНрд╕ рд╕рд╣реА рдврдВрдЧ рд╕реЗ рд▓реВрдк рдХрд░реЗ
        caption = f"{prefix_emoji} {msg}"

        # --- рдпрд╣рд╛рдВ PROMO_CHANNEL_ID рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ ---
        print(f"Attempting to send message to {PROMO_CHANNEL_ID} with caption: {caption}")
        sent_message = bot.send_photo(PROMO_CHANNEL_ID, image_url, caption=caption, parse_mode='Markdown')
        print(f"Message sent! Message ID: {sent_message.message_id}")

        # рднреЗрдЬреЗ рдЧрдП рдореИрд╕реЗрдЬ рдореЗрдВ рд░рд┐рдПрдХреНрд╢рди рдЬреЛрдбрд╝реЗрдВ
        if sent_message:
            reactions_to_add = ['ЁЯСН', 'тЭдя╕П'] # рдЕрдкрдиреЗ рд░рд┐рдПрдХреНрд╢рди рдпрд╣рд╛рдВ рдХрд╕реНрдЯрдорд╛рдЗрдЬрд╝ рдХрд░реЗрдВ
            for reaction_emoji in reactions_to_add:
                try:
                    bot.set_message_reaction(
                        chat_id=PROMO_CHANNEL_ID, # --- рдпрд╣рд╛рдВ PROMO_CHANNEL_ID рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ ---
                        message_id=sent_message.message_id,
                        reaction=[{'type': 'emoji', 'emoji': reaction_emoji}]
                    )
                    print(f"Reaction '{reaction_emoji}' added to message ID {sent_message.message_id}")
                except Exception as reaction_e:
                    print(f"Error adding reaction '{reaction_emoji}' to message ID {sent_message.message_id}: {reaction_e}")

    except Exception as e:
        print(f"Error sending auto message or adding reaction: {e}")

def auto_poster():
    """
    рдереНрд░реЗрдб рдлрд╝рдВрдХреНрд╢рди рдЬреЛ рд╕рдордп-рд╕рдордп рдкрд░ рдЧреБрдб рдореЙрд░реНрдирд┐рдВрдЧ/рдирд╛рдЗрдЯ рдореИрд╕реЗрдЬ рднреЗрдЬрддрд╛ рд╣реИред
    """
    posted_morning_today = False
    posted_night_today = False
    india_timezone = pytz.timezone('Asia/Kolkata')
    
    # рдЖрдЬ рдХреЗ рд▓рд┐рдП рд░реИрдВрдбрдо рдорд┐рдирдЯ рдЗрдирд┐рд╢рд┐рдпрд▓рд╛рдЗрдЬрд╝ рдХрд░реЗрдВ
    morning_minute = random.randint(0, 10)  # X:00 рдФрд░ X:10 AM рдХреЗ рдмреАрдЪ
    night_minute = random.randint(0, 10)    # Y:00 рдФрд░ Y:10 PM рдХреЗ рдмреАрдЪ
    
    # рдлреНрд▓реИрдЧреНрд╕ рдХреЛ рд╡рд┐рд╢реНрд╡рд╕рдиреАрдп рд░реВрдк рд╕реЗ рд░реАрд╕реЗрдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдкреЛрд╕реНрдЯрд░ рдХреЗ рдЕрдВрддрд┐рдо рджрд┐рди рдХреЛ рдЯреНрд░реИрдХ рдХрд░реЗрдВ
    last_run_day = datetime.now(india_timezone).day
    
    print(f"Auto-poster started. Morning target minute: {morning_minute}, Night target minute: {night_minute}")
    print(f"Initial last run day: {last_run_day}")

    while True:
        try: # рд▓реВрдк рдореЗрдВ рдПрд░рд░ рдкрдХрдбрд╝рдиреЗ рдХреЗ рд▓рд┐рдП try-except рдЬреЛрдбрд╝рд╛ рдЧрдпрд╛ рд╣реИ
            # рдкрд╣рд▓реЗ UTC рдореЗрдВ рд╡рд░реНрддрдорд╛рди рд╕рдордп рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ (рд╕рд░реНрд╡рд░ рдХрд╛ рд╕рдВрднрд╛рд╡рд┐рдд рдбрд┐рдлрд╝реЙрд▓реНрдЯ)
            utc_now = datetime.utcnow()
            # UTC рд╕рдордп рдХреЛ IST рдореЗрдВ рдмрджрд▓реЗрдВ
            now = utc_now.replace(tzinfo=pytz.utc).astimezone(india_timezone)
            
            current_hour = now.hour
            current_minute = now.minute
            current_day = now.day # рдорд╣реАрдиреЗ рдХрд╛ рд╡рд░реНрддрдорд╛рди рджрд┐рди рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ

            # --- рдбрд┐рдмрдЧрд┐рдВрдЧ рд▓реЙрдЧреНрд╕ рдпрд╣рд╛рдВ рдЬреЛрдбрд╝реЗ рдЧрдП рд╣реИрдВ ---
            print(f"DEBUG: Auto-poster loop running. Current IST Time: {now.strftime('%Y-%m-%d %H:%M:%S')}, Hour: {current_hour}, Minute: {current_minute}, Day: {current_day}")
            print(f"DEBUG: Flags: Morning={posted_morning_today}, Night={posted_night_today}, Last Run Day={last_run_day}")
            # --- рдбрд┐рдмрдЧрд┐рдВрдЧ рд▓реЙрдЧреНрд╕ рдХрд╛ рдЕрдВрдд ---

            # рджреИрдирд┐рдХ рд░реАрд╕реЗрдЯ: рдЬрд╛рдВрдЪреЗрдВ рдХрд┐ рдХреНрдпрд╛ рджрд┐рди рдмрджрд▓ рдЧрдпрд╛ рд╣реИ
            if current_day != last_run_day:
                print(f"Day changed from {last_run_day} to {current_day}. Resetting flags and generating new random minutes.")
                posted_morning_today = False
                posted_night_today = False
                morning_minute = random.randint(0, 10)
                night_minute = random.randint(0, 10)
                last_run_day = current_day # рдЕрдВрддрд┐рдо рд░рди рджрд┐рди рдЕрдкрдбреЗрдЯ рдХрд░реЗрдВ
                print(f"New morning target minute: {morning_minute}, New night target minute: {night_minute}")
            
            # рдЧреБрдб рдореЙрд░реНрдирд┐рдВрдЧ рдЯрд╛рдЗрдо (5:00-5:10 AM IST)
            if current_hour == 5 and not posted_morning_today:
                if current_minute >= morning_minute:
                    print(f"Time to send Good Morning! Current: {current_hour}:{current_minute}, Target: 5:{morning_minute}")
                    send_message_auto(UNIQUE_MORNING_MESSAGES, MORNING_IMAGE_URLS, "тШАя╕П")
                    posted_morning_today = True
                    print("Good Morning message sent and flag set.")
                else: # рдЬрдм 5 AM рд╣реЛ рд▓реЗрдХрд┐рди рдорд┐рдирдЯ рдкреВрд░рд╛ рди рд╣реБрдЖ рд╣реЛ рдЙрд╕рдХреЗ рд▓рд┐рдП рдбрд┐рдмрдЧрд┐рдВрдЧ рд▓рд╛рдЗрди
                    print(f"DEBUG: It's 5 AM but minute {current_minute} < target minute {morning_minute}. Waiting.")
            
            # рдЧреБрдб рдирд╛рдЗрдЯ рдЯрд╛рдЗрдо (10:00-10:10 PM IST)
            if current_hour == 22 and not posted_night_today:
                if current_minute >= night_minute:
                    print(f"Time to send Good Night! Current: {current_hour}:{current_minute}, Target: 22:{night_minute}")
                    send_message_auto(UNIQUE_NIGHT_MESSAGES, NIGHT_IMAGE_URLS, "ЁЯМЩ")
                    posted_night_today = True
                    print("Good Night message sent and flag set.")
                else: # рдЬрдм 10 PM рд╣реЛ рд▓реЗрдХрд┐рди рдорд┐рдирдЯ рдкреВрд░рд╛ рди рд╣реБрдЖ рд╣реЛ рдЙрд╕рдХреЗ рд▓рд┐рдП рдбрд┐рдмрдЧрд┐рдВрдЧ рд▓рд╛рдЗрди
                    print(f"DEBUG: It's 10 PM but minute {current_minute} < target minute {night_minute}. Waiting.")
            
            # рджреЛрдмрд╛рд░рд╛ рдЬрд╛рдВрдЪрдиреЗ рд╕реЗ рдкрд╣рд▓реЗ рдХреБрдЫ рджреЗрд░ рд░реБрдХреЗрдВ
            time.sleep(60) # рд╣рд░ 60 рд╕реЗрдХрдВрдб (1 рдорд┐рдирдЯ) рдореЗрдВ рдЬрд╛рдВрдЪреЗрдВ
        except Exception as e:
            # рдЕрдирд╣реИрдВрдбрд▓реНрдб рдЕрдкрд╡рд╛рджреЛрдВ рдХреЗ рд▓рд┐рдП рдкреВрд░рд╛ рдЯреНрд░реЗрд╕реЗрдмреИрдХ рд▓реЙрдЧ рдХрд░реЗрдВ
            print(f"ERROR: An unhandled exception occurred in auto_poster thread: {e}")
            print(traceback.format_exc()) # рдкреВрд░рд╛ рдЯреНрд░реЗрд╕реЗрдмреИрдХ рдкреНрд░рд┐рдВрдЯ рдХрд░реЗрдВ
            time.sleep(300) # рддреЗрдЬреА рд╕реЗ рдХреНрд░реИрд╢ рд╣реЛрдиреЗ рд╕реЗ рд░реЛрдХрдиреЗ рдХреЗ рд▓рд┐рдП рдлрд┐рд░ рд╕реЗ рдХреЛрд╢рд┐рд╢ рдХрд░рдиреЗ рд╕реЗ рдкрд╣рд▓реЗ рд▓рдВрдмреА рдЕрд╡рдзрд┐ (5 рдорд┐рдирдЯ) рдХреЗ рд▓рд┐рдП рд░реБрдХреЗрдВ

def keyword_found(text):
    """
    рдЬрд╛рдВрдЪрддрд╛ рд╣реИ рдХрд┐ рдЯреЗрдХреНрд╕реНрдЯ рдореЗрдВ рдХреЛрдИ рдкрд░рд┐рднрд╛рд╖рд┐рдд рдХреАрд╡рд░реНрдб рдпрд╛ URL рдкреИрдЯрд░реНрди рдореМрдЬреВрдж рд╣реИ рдпрд╛ рдирд╣реАрдВред
    """
    text = text.lower()
    # рдЪреИрдирд▓ рдирд╛рдореЛрдВ рдФрд░ рдХрдорд╛рдВрдб рдХреЗ рд▓рд┐рдП @ рдФрд░ / рдХреЛ рдЫреЛрдбрд╝рдХрд░ рд╡рд┐рд░рд╛рдо рдЪрд┐рд╣реНрди рд╣рдЯрд╛ рджреЗрдВ
    text = re.sub(r'[^\w\s@/]', '', text) 
    
    for kw in KEYWORDS:
        # рдЕрдзрд┐рдХрд╛рдВрд╢ рдХреАрд╡рд░реНрдб рдХреЗ рд▓рд┐рдП рд╢рдмреНрдж рд╕реАрдорд╛рдУрдВ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ рддрд╛рдХрд┐ рдЖрдВрд╢рд┐рдХ рдорд┐рд▓рд╛рди рд╕реЗ рдмрдЪрд╛ рдЬрд╛ рд╕рдХреЗ (рдЙрджрд╛рд╣рд░рдг рдХреЗ рд▓рд┐рдП, "join" "joining" рд╕реЗ рдореЗрд▓ рдирд╣реАрдВ рдЦрд╛рдирд╛ рдЪрд╛рд╣рд┐рдП)
        # рд╣рд╛рд▓рд╛рдВрдХрд┐, "https" рдпрд╛ "@" рдЬреИрд╕реЗ рдХреБрдЫ рдХреЗ рд▓рд┐рдП, рд╕реАрдзрд╛ рд╕рдмрд╕реНрдЯреНрд░рд┐рдВрдЧ рдорд┐рд▓рд╛рди рдЕрдкреЗрдХреНрд╖рд┐рдд рд╣реЛ рд╕рдХрддрд╛ рд╣реИред
        # рд╡рд┐рд╢рд┐рд╖реНрдЯ рдХреАрд╡рд░реНрдб рдХреЛ рд╕рдВрднрд╛рд▓рдиреЗ рдХреЗ рд▓рд┐рдП рд╕рдВрд╢реЛрдзрд┐рдд рдХрд┐рдпрд╛ рдЧрдпрд╛ рдЬрд╣рд╛рдВ рдЖрдВрд╢рд┐рдХ рдорд┐рд▓рд╛рди рдареАрдХ рд╣реИ (рдЬреИрд╕реЗ 'joining' рдХреЗ рднреАрддрд░ 'join')
        if kw in ["https", "@", "t.me", "bit.ly"]: # рдпреЗ рдЕрдХреНрд╕рд░ URL рдХрд╛ рд╣рд┐рд╕реНрд╕рд╛ рд╣реЛрддреЗ рд╣реИрдВ
             if kw in text:
                 return True
        elif re.search(r'\b' + re.escape(kw) + r'\b', text): # рдкреВрд░реЗ рд╢рдмреНрджреЛрдВ рдХреЗ рд▓рд┐рдП
            return True
        # рд╣рд┐рдВрджреА рд╢рдмреНрджреЛрдВ рдХреЗ рд▓рд┐рдП рд╡рд┐рд╢рд┐рд╖реНрдЯ рдЬрд╛рдВрдЪ рдЬреЛ рд╣рдореЗрд╢рд╛ рд╕реНрдкрд╖реНрдЯ рд╢рдмреНрдж рд╕реАрдорд╛рдУрдВ рдХреЗ рд╕рд╛рде рдирд╣реАрдВ рд╣реЛ рд╕рдХрддреА рд╣реИрдВ
        if kw in ["рдЪреИрдирд▓", "рдЬреНрд╡рд╛рдЗрди", "рдХрдордИ", "рдкреИрд╕реЗ", "рдлрд╝реЙрд▓реЛ"]:
            if kw in text:
                return True

    # рд╕рд╛рдорд╛рдиреНрдп URL рдкреИрдЯрд░реНрди рдХреЗ рд▓рд┐рдП рд╕реНрдкрд╖реНрдЯ рд░реВрдк рд╕реЗ рдЬрд╛рдВрдЪ рдХрд░реЗрдВ
    if re.search(r'(https?://\S+|t\.me/\S+|bit\.ly/\S+)', text):
        return True
    return False

# --- рдЯреЗрд▓реАрдЧреНрд░рд╛рдо рдмреЙрдЯ рдореИрд╕реЗрдЬ рд╣реИрдВрдбрд▓рд░ ---

@bot.message_handler(commands=['start'])
def start_handler(message):
    """
    /start рдХрдорд╛рдВрдб рдХреЛ рд╣реИрдВрдбрд▓ рдХрд░рддрд╛ рд╣реИ, рдПрдХ рдкреНрд░рдореЛрд╢рдирд▓ рдореИрд╕реЗрдЬ рдФрд░ рдЗрдореЗрдЬ рднреЗрдЬрддрд╛ рд╣реИред
    """
    print(f"Received /start command from {message.chat.id}")
    try:
        # --- рдпрд╣рд╛рдВ PROMOTION_CHANNEL_USERNAME рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ ---
        bot.send_photo(message.chat.id, START_IMAGE_URL, caption=START_MESSAGE_TEXT, parse_mode='Markdown')
        print(f"Sent /start message to {message.chat.id}")
    except Exception as e:
        print(f"Error in /start handler for chat ID {message.chat.id}: {e}")
        bot.send_message(message.chat.id, f"Error receiving /start: {e}")

@bot.message_handler(func=lambda msg: True)
def promo_reply(message):
    """
    рд╕рднреА рдЗрдирдХрдорд┐рдВрдЧ рдореИрд╕реЗрдЬ рдХреЛ рд╣реИрдВрдбрд▓ рдХрд░рддрд╛ рд╣реИ рдФрд░ рдпрджрд┐ рдХреАрд╡рд░реНрдб рдкрд╛рдП рдЬрд╛рддреЗ рд╣реИрдВ рддреЛ рдкреНрд░рдореЛрд╢рди рдХреЗ рд╕рд╛рде рд░рд┐рдкреНрд▓рд╛рдИ рдХрд░рддрд╛ рд╣реИред
    """
    if not message.text:
        return # рдХреИрдкреНрд╢рди рдХреЗ рдмрд┐рдирд╛ рдлреЛрдЯреЛ рдЬреИрд╕реЗ рдЯреЗрдХреНрд╕реНрдЯ рдХреЗ рдмрд┐рдирд╛ рдореИрд╕реЗрдЬ рдХреЛ рдЕрдирджреЗрдЦрд╛ рдХрд░реЗрдВ

    print(f"Received message from {message.chat.id}: {message.text}")
    try:
        if keyword_found(message.text):
            print(f"Keyword found in message from {message.chat.id}. Sending promo reply.")
            # --- рдпрд╣рд╛рдВ PROMOTION_CHANNEL_LINK рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ ---
            promo_caption = f"*[[Boss >> рд╣рдорд╛рд░реЗ рдЪреИрдирд▓ рдХреЛ рднреА [[ Join ]] рдХрд░реЗрдВ:]]*\n*[[ {PROMOTION_CHANNEL_LINK} ]]*"
            
            bot.send_photo(
                chat_id=message.chat.id,
                photo="https://raw.githubusercontent.com/Sakeelb/Earning_Boss/refs/heads/main/New/IMG_20250605_144922.png",
                caption=promo_caption,
                parse_mode='Markdown',
                reply_to_message_id=message.message_id # рдпреВрдЬрд╝рд░ рдХреЗ рдореИрд╕реЗрдЬ рдХрд╛ рд░рд┐рдкреНрд▓рд╛рдИ рдХрд░реЗрдВ
            )
            print(f"Promo reply sent to {message.chat.id}.")
    except Exception as e:
        print(f"Error in promo_reply for message ID {message.message_id}: {e}")

# --- рдлреНрд▓рд╛рд╕реНрдХ рдРрдк рд░реВрдЯреНрд╕ рд╡реЗрдмрд╣реБрдХ рдХреЗ рд▓рд┐рдП ---

@app.route('/', methods=['POST'])
def webhook():
    """
    рдЯреЗрд▓реАрдЧреНрд░рд╛рдо рд╕реЗ рдЕрдкрдбреЗрдЯ рдкреНрд░рд╛рдкреНрдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╡реЗрдмрд╣реБрдХ рдПрдВрдбрдкреЙрдЗрдВрдЯред
    """
    if request.headers.get('content-type') == 'application/json':
        json_string = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return 'OK', 200
    else:
        return '<h1>Bad Request!</h1>', 403

@app.route('/')
def home():
    """
    рдпрд╣ рдкреБрд╖реНрдЯрд┐ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╕рд░рд▓ рд╣реЛрдо рдкреЗрдЬ рдХрд┐ рдлреНрд▓рд╛рд╕реНрдХ рдРрдк рдЪрд▓ рд░рд╣рд╛ рд╣реИред
    """
    return "Bot is running and listening for updates!"

# --- рдореБрдЦреНрдп рдирд┐рд╖реНрдкрд╛рджрди рдмреНрд▓реЙрдХ ---

if __name__ == "__main__":
    # рдСрдЯреЛ-рдкреЛрд╕реНрдЯрд░ рдХреЛ рдПрдХ рдЕрд▓рдЧ рдереНрд░реЗрдб рдореЗрдВ рд╢реБрд░реВ рдХрд░реЗрдВ
    threading.Thread(target=auto_poster, daemon=True).start()
    print("Auto-poster thread started.")

    # Render рдбрд┐рдкреНрд▓реЙрдпрдореЗрдВрдЯ рдХреЗ рд▓рд┐рдП рд╡реЗрдмрд╣реБрдХ рдХреЙрдиреНрдлрд╝рд┐рдЧрд░ рдХрд░реЗрдВ рдпрд╛ рд▓реЛрдХрд▓ рдХреЗ рд▓рд┐рдП рд▓реЙрдиреНрдЧ рдкреЛрд▓рд┐рдВрдЧ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ
    if IS_RENDER == "true": # Render рдкрд░реНрдпрд╛рд╡рд░рдг рдЪрд░ рдХреЛ рд╕реНрдЯреНрд░рд┐рдВрдЧ рдХреЗ рд░реВрдк рдореЗрдВ рд╕реЗрдЯ рдХрд░рддрд╛ рд╣реИ
        if BOT_TOKEN and WEBHOOK_URL:
            try:
                bot.set_webhook(url=f"{WEBHOOK_URL}/")
                print(f"Webhook set to: {WEBHOOK_URL}/")
                # рд╡реЗрдмрд╣реБрдХ рдХреЗ рд▓рд┐рдП рдлреНрд▓рд╛рд╕реНрдХ рдРрдк рдЪрд▓рд╛рдПрдВ
                app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
            except Exception as e:
                print(f"Error setting webhook or starting Flask app: {e}")
                print("Falling back to long polling.")
                bot.infinity_polling() # рдлреЙрд▓рдмреИрдХ
        else:
            print("Environment variables BOT_TOKEN or WEBHOOK_URL not set for Render. Using long polling.")
            bot.infinity_polling()
    else:
        print("Not running on Render (IS_RENDER not 'true'). Running with long polling (for local development).")
        bot.infinity_polling()

